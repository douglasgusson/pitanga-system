package br.com.pitanga.view;

import br.com.pitanga.dao.model.CidadeDAO;
import br.com.pitanga.domain.Cidade;
import br.com.pitanga.table.cellrenderer.CidadeCellRenderer;
import br.com.pitanga.table.model.CidadeTableModel;
import br.com.pitanga.util.GUIUtils;
import br.com.pitanga.dao.DAOFactory;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.KeyStroke;

/**
 *
 * @author Douglas Gusson
 */
public class FrmBuscaCidade extends javax.swing.JDialog {

    private List<Cidade> cidades = null;
    private FrmCliente frmCliente;
    private FrmFornecedor frmFornecedor;
    private FrmEmpresa frmEmpresa;
    private static final int ORIGEM_CLIENTE = 1;
    private static final int ORIGEM_FORNECEDOR = 2;
    private static final int ORIGEM_EMPRESA = 3;
    private int origem;

    public FrmBuscaCidade(JDialog parent, boolean modal, FrmCliente frmCliente) {
        super(parent, modal);
        initComponents();
        initialize();
        this.frmCliente = frmCliente;
        this.origem = ORIGEM_CLIENTE;
    }

    public FrmBuscaCidade(JDialog parent, boolean modal, FrmFornecedor frmFornecedor) {
        super(parent, modal);
        initComponents();
        initialize();
        this.frmFornecedor = frmFornecedor;
        this.origem = ORIGEM_FORNECEDOR;
    }

    public FrmBuscaCidade(JDialog parent, boolean modal, FrmEmpresa frmEmpresa) {
        super(parent, modal);
        initComponents();
        initialize();
        this.frmEmpresa = frmEmpresa;
        this.origem = ORIGEM_EMPRESA;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbCidade = new javax.swing.JTable();
        btSair = new javax.swing.JButton();
        tfPesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tbCidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbCidade.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbCidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCidadeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCidade);

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        tfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPesquisaKeyReleased(evt);
            }
        });

        jLabel1.setText("Pesquisa:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSair)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btSair))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        if (!devolveCidade()) {
            this.dispose();
        }
    }//GEN-LAST:event_btSairActionPerformed

    private void tbCidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCidadeMouseClicked
        if (evt.getClickCount() == 2) {
            devolveCidade();
        }
    }//GEN-LAST:event_tbCidadeMouseClicked

    private void tfPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisaKeyReleased
        String termo = this.tfPesquisa.getText().trim();
        preencherTabelaPesquisa(termo);
    }//GEN-LAST:event_tfPesquisaKeyReleased

    private void initialize() {
        eventoFechar();
        preencherTabela();
        this.setTitle("Pitanga System - Consulta cidades");
        GUIUtils obj = new GUIUtils();
        GUIUtils.considerarEnterComoTab(this);
        this.tfPesquisa.requestFocus();

        // Se teclarmos ESC nesta janela, ela irÃ¡ se fechar:  
        this.getRootPane().registerKeyboardAction((ActionEvent e) -> {
            FrmBuscaCidade.this.devolveCidade();
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    private void preencherTabela() {
        this.cidades = preencherCidades();
        if (this.cidades != null) {
            this.tbCidade.setModel(new CidadeTableModel(this.cidades));

            this.tbCidade.setDefaultRenderer(Object.class, new CidadeCellRenderer());
        }
    }

    private List<Cidade> preencherCidades() {
        List<Cidade> lista = new ArrayList<>();
        CidadeDAO cd = DAOFactory.getDefaultDAOFactory().getCidadeDAO();
        lista = cd.listar();

        return lista;
    }

    public Cidade buscaCidade(int linha) {

        Cidade cidade = new Cidade();

        CidadeDAO cd = DAOFactory.getDefaultDAOFactory().getCidadeDAO();
        cidade = cd.buscarPorId(Integer.parseInt(
                this.tbCidade.getValueAt(linha, 0).toString()));

        return cidade;

    }

    private void preencherTabelaPesquisa(String nome) {

        CidadeDAO cd = DAOFactory.getDefaultDAOFactory().getCidadeDAO();
        this.cidades = cd.buscarPorNome(nome);

        tbCidade.setModel(new CidadeTableModel(cidades));
        tbCidade.setDefaultRenderer(Object.class, new CidadeCellRenderer());
    }

    private boolean devolveCidade() {

        int selecionada = tbCidade.getSelectedRow();

        if (selecionada != -1) {
            CidadeTableModel obj = new CidadeTableModel(cidades);
            Cidade cidade = obj.get(selecionada);

            switch (origem) {
                case ORIGEM_CLIENTE:
                    frmCliente.preencherCamposCidade(cidade);
                    dispose();
                    break;
                case ORIGEM_FORNECEDOR:
                    frmFornecedor.setCidade(cidade);
                    dispose();
                    break;
                case ORIGEM_EMPRESA:
                    frmEmpresa.setCidade(cidade);
                    dispose();
                    break;
            }
            return true;
        }
        return false;
    }

    private void eventoFechar() {
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                devolveCidade();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbCidade;
    private javax.swing.JTextField tfPesquisa;
    // End of variables declaration//GEN-END:variables
}
