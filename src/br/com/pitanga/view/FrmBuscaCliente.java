package br.com.pitanga.view;

import br.com.pitanga.dao.model.ClienteDAO;
import br.com.pitanga.domain.Cliente;
import br.com.pitanga.table.cellrenderer.ClienteCellRenderer;
import br.com.pitanga.table.model.ClienteTableModel;
import br.com.pitanga.util.GUIUtils;
import br.com.pitanga.dao.DAOFactory;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.KeyStroke;

/**
 *
 * @author Douglas Gusson
 */
public class FrmBuscaCliente extends javax.swing.JDialog {

    private List<Cliente> clientes = new ArrayList<>();
    private FrmVenda frmVenda;
    private FrmConsultaTituloVenda frmConsultaTituloVenda;
    private boolean origemVenda = false;
    private boolean origemConsultaTituloVenda = false;

    public FrmBuscaCliente(JDialog parent, boolean modal, FrmVenda frmVenda) {
        super(parent, modal);
        initComponents();
        initialize();
        this.frmVenda = frmVenda;
        this.origemVenda = true;
    }

    public FrmBuscaCliente(JDialog parent, boolean modal, FrmConsultaTituloVenda frmConsultaTituloVenda) {
        super(parent, modal);
        initComponents();
        initialize();
        this.frmConsultaTituloVenda = frmConsultaTituloVenda;
        this.origemConsultaTituloVenda = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        btnSair = new javax.swing.JButton();
        tfPesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbCliente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCliente);

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        tfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPesquisaKeyReleased(evt);
            }
        });

        jLabel1.setText("Pesquisa:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSair)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSair))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        if (!devolverCliente()) {
            this.dispose();
        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void tbClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClienteMouseClicked
        if (evt.getClickCount() == 2) {
            devolverCliente();
        }
    }//GEN-LAST:event_tbClienteMouseClicked

    private void tfPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisaKeyReleased
        String termo = this.tfPesquisa.getText();
        preencherTabelaPesquisa(termo);
    }//GEN-LAST:event_tfPesquisaKeyReleased

    private void initialize() {
        eventoFechar();
        preencherTabelaClientes();
        this.setTitle("Pitanga System - Consulta clientes");
        GUIUtils.considerarEnterComoTab(this);
        this.tfPesquisa.requestFocus();
        // Se teclarmos ESC nesta janela, ela irÃ¡ se fechar:  
        this.getRootPane().registerKeyboardAction((ActionEvent e) -> {
            FrmBuscaCliente.this.devolverCliente();
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    private void preencherTabelaClientes() {
        ClienteDAO cd = DAOFactory.getDefaultDAOFactory().getClienteDAO();
        this.clientes = cd.listarTodos();
        if (this.clientes != null) {
            this.tbCliente.setModel(new ClienteTableModel(this.clientes));
            this.tbCliente.setDefaultRenderer(Object.class, new ClienteCellRenderer());
        }
    }

    public Cliente buscaCliente(int linha) { 
        ClienteTableModel tbModel = new ClienteTableModel(clientes);
        Cliente cliente = tbModel.get(linha);
        ClienteDAO cd = DAOFactory.getDefaultDAOFactory().getClienteDAO();
        cliente = cd.buscarPorId(Integer.parseInt((this.tbCliente.getValueAt(linha, 0)).toString()));
        return cliente;
    }

    private void preencherTabelaPesquisa(String nome) {
        ClienteDAO cd = DAOFactory.getDefaultDAOFactory().getClienteDAO();
        this.clientes = cd.buscarPorNome(nome);
        tbCliente.setModel(new ClienteTableModel(clientes));
        tbCliente.setDefaultRenderer(Object.class, new ClienteCellRenderer());
    }

    private boolean devolverCliente() {
        int selecionada = tbCliente.getSelectedRow();
        if (selecionada != -1) {
            ClienteTableModel obj = new ClienteTableModel(clientes);
            Cliente cliente = obj.get(selecionada);
            if (origemVenda) {
                frmVenda.setCliente(cliente);
                dispose();
            } else if (origemConsultaTituloVenda) {
                frmConsultaTituloVenda.setCliente(cliente);
                dispose();
            }
            return true;
        }
        return false;
    }

    private void eventoFechar() {
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                devolverCliente();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTextField tfPesquisa;
    // End of variables declaration//GEN-END:variables
}
