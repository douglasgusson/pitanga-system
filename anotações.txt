Vendas:
- Mudança do nome do cliente para a guia produto
- Não alterar o preço unitário

Produto:
- Alteração
- Pesquisa
- Limpar campos

Situação do Estoque:
- Vendido
- Reservado
- Disponível


SELECT id_usuario, nome, senha FROM usuario;

INSERT INTO usuario(nome, senha)
  VALUES('teste7', MD5('-*/-*/*51356842KNLOYUT67')); 


SELECT nome FROM usuario 
  WHERE nome = 'teste5' 
     OR nome = 'teste7' 
     AND senha = MD5('-*/-*/*51356842KNLOYUT67') 
  LIMIT 3; 



http://blog.caelum.com.br/guardando-senhas-criptografadas-em-java/

MessageDigest algorithm = MessageDigest.getInstance("SHA-256");
byte messageDigest[] = algorithm.digest(original.getBytes("UTF-8"));
 
StringBuilder hexString = new StringBuilder();
for (byte b : messageDigest) {
  hexString.append(String.format("%02X", 0xFF & b));
}
String senha = hexString.toString();




package Authentication;

import java.util.ArrayList;

public class Authentication {

    public boolean Authenticate(String name, String password) {
        boolean isAuthenticated = false;
        
        UserDAO dao = new UserDAO();
        ArrayList<User> Users = (ArrayList) dao.findAll();
        
        for (User u:Users) {
            if (u.getName().equals(name) && (u.getPassword().equals(password))) {
                isAuthenticated = true;
                break;
            }
        }
        return isAuthenticated;
    }
}